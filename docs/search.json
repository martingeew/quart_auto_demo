[
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "Top Tech Stocks Report",
    "section": "",
    "text": "Author: Martin Wong @ Autonomous Econ This is a demo site built using Quarto and Python. Check outthe full Substack post here.\n\n\nLast updated: 27-03-2025 19:47\n\n\n\n\nCode\nimport ffn\nimport pandas as pd\nimport plotly.graph_objects as go\nfrom datetime import datetime\n\n\n# Function for generating the interactive plot\ndef plot_stock_timeseries_interactive(df):\n    \"\"\"\n    Creates an interactive Plotly plot for all columns in the DataFrame.\n\n    Parameters:\n    df (pd.DataFrame): DataFrame with float columns and DatetimeIndex as index.\n    \"\"\"\n    # Initialize the figure\n    fig = go.Figure()\n\n    # Add a line for each column\n    for col in df.columns:\n        fig.add_trace(\n            go.Scatter(\n                x=df.index,\n                y=df[col],\n                mode=\"lines\",\n                name=col,\n                line=dict(width=2),\n            )\n        )\n\n    # Update layout for dark theme\n    fig.update_layout(\n        template=\"plotly_dark\",\n        plot_bgcolor=\"#282a36\",\n        paper_bgcolor=\"#282a36\",\n        title=dict(\n            text=\"Tech stocks indexed to 2023-01-01=100\",\n            font=dict(size=20, color=\"white\"),\n            x=0.01,\n            xanchor=\"left\",\n        ),\n        legend=dict(\n            font=dict(size=16, color=\"white\"),\n            bgcolor=\"#282a36\",\n            bordercolor=\"white\",\n            borderwidth=1,\n        ),\n        xaxis=dict(\n            showgrid=True,\n            gridcolor=\"white\",\n            tickfont=dict(size=14, color=\"white\"),\n        ),\n        yaxis=dict(\n            showgrid=True,\n            gridcolor=\"white\",\n            tickfont=dict(size=14, color=\"white\"),\n            range=[0, 1250],\n        ),\n    )\n\n    # Return the figure\n    return fig\n\n# Load latest file\ntimestamp = datetime.now().strftime(\"%Y-%m-%d\")\ndata_rebase = pd.read_csv(\n    f\"data/stock_data_{timestamp}.csv\", index_col=0, parse_dates=True\n)\n\n# Step 3: Generate interactive plot\nfig = plot_stock_timeseries_interactive(data_rebase)\n\n# Step 4: Display the plot\nfig.show()\n\n\n\n\n                                                \n\n\nFigureÂ 1: Top tech stocks indexed"
  }
]